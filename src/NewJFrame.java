import com.sun.speech.freetts.Voice;
import com.sun.speech.freetts.VoiceManager;
import java.awt.event.KeyEvent;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import java.util.Objects;
import javax.speech.Central;
import tudien.FileData;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author admin
 */
public class NewJFrame extends javax.swing.JFrame {     
    static String KeyWord = null;

    FileData data = new FileData();
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        if(FileData.list.size() == 0) {
        data.loadFile();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        add = new javax.swing.JButton();
        voice = new javax.swing.JButton();
        xoa = new javax.swing.JButton();
        sua = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        newWord = new javax.swing.JTextField();
        mean = new javax.swing.JTextField();
        Dich = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        dictionnary = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        meanNew = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        List_Suggest = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TỪ ĐIỂN ANH-VIỆT");

        jPanel2.setLayout(null);

        add.setBackground(new java.awt.Color(102, 255, 255));
        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ảnh từ điển/add.jpg"))); // NOI18N
        add.setText("thêm");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel2.add(add);
        add.setBounds(320, 140, 80, 30);

        voice.setBackground(new java.awt.Color(102, 255, 255));
        voice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ảnh từ điển/microphone.png"))); // NOI18N
        voice.setText("giọng");
        voice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voiceActionPerformed(evt);
            }
        });
        jPanel2.add(voice);
        voice.setBounds(320, 210, 80, 30);

        xoa.setBackground(new java.awt.Color(102, 255, 255));
        xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ảnh từ điển/delete.png"))); // NOI18N
        xoa.setText("xóa");
        xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaActionPerformed(evt);
            }
        });
        jPanel2.add(xoa);
        xoa.setBounds(320, 350, 80, 30);

        sua.setBackground(new java.awt.Color(102, 255, 255));
        sua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ảnh từ điển/edit.jpg"))); // NOI18N
        sua.setText("sửa");
        sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suaActionPerformed(evt);
            }
        });
        jPanel2.add(sua);
        sua.setBounds(320, 280, 80, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setText("Từ mới");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(400, 110, 80, 22);

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel3.setText("Giải nghĩa");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(400, 170, 110, 22);

        newWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newWordActionPerformed(evt);
            }
        });
        jPanel2.add(newWord);
        newWord.setBounds(500, 100, 280, 30);

        mean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meanActionPerformed(evt);
            }
        });
        jPanel2.add(mean);
        mean.setBounds(500, 240, 280, 240);

        Dich.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ảnh từ điển/translate.png"))); // NOI18N
        Dich.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DichActionPerformed(evt);
            }
        });
        jPanel2.add(Dich);
        Dich.setBounds(440, 240, 50, 50);

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel4.setText("Từ Điển");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(30, 30, 150, 50);

        dictionnary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dictionnaryActionPerformed(evt);
            }
        });
        dictionnary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dictionnaryKeyReleased(evt);
            }
        });
        jPanel2.add(dictionnary);
        dictionnary.setBounds(30, 90, 210, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 10)); // NOI18N
        jLabel5.setText("Gợi ý");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(30, 140, 80, 13);
        jPanel2.add(meanNew);
        meanNew.setBounds(500, 159, 280, 30);

        List_Suggest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                List_SuggestMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(List_Suggest);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(30, 170, 210, 320);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ảnh từ điển/background.jpg"))); // NOI18N
        jLabel2.setText("DFĐ");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(0, 0, 800, 600);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void setAllText() {
        dictionnary.setText("");
        newWord.setText("");
        mean.setText("");
        meanNew.setText("");
    }
    
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        if (newWord.getText().isEmpty() || meanNew.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Hãy nhập đủ cả từ và nghĩa của từ!");
            setAllText();
        } else {
            data.list.add(newWord.getText());
            data.list.add(meanNew.getText());
            JOptionPane.showMessageDialog(this, "Thêm từ thành công");
            setAllText();
        }
    }//GEN-LAST:event_addActionPerformed

    private void suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suaActionPerformed
        // TODO add your handling code here:
        String word = JOptionPane.showInputDialog(null, "Nhập từ cần sửa:", 
                "Sửa từ", JOptionPane.INFORMATION_MESSAGE);
        int count;
        count = data.list.indexOf(word);
        if(word.length() == 0){}
        else if(count == -1) JOptionPane.showMessageDialog(this, "Không có từ này");
        else {
            JTextField en = new JTextField();
            JTextField vi = new JTextField();
            en.setText(data.list.get(count));
            vi.setText(data.list.get(count + 1));
            Object[] fields = {"Từ:", en, "Nghĩa:", vi};
            JOptionPane.showConfirmDialog(null, fields, "Move Shape", JOptionPane.WARNING_MESSAGE);
            data.list.set(count, en.getText());
            data.list.set(count + 1, vi.getText());
        }

    }//GEN-LAST:event_suaActionPerformed

    private void DichActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        if(Objects.equals(dictionnary.getText(), "")) {
           JOptionPane.showMessageDialog(this, "Hãy nhập từ bạn cần dịch");
       } else if (data.dich(dictionnary.getText()) == null){
           JOptionPane.showMessageDialog(this, "Không có từ bạn cần tìm");
           mean.setText("");
       } else {
           mean.setText(data.dich(dictionnary.getText()));
       }
//GEN-FIRST:event_DichActionPerformed

    }//GEN-LAST:event_DichActionPerformed

    private void newWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newWordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newWordActionPerformed

    private void dictionnaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dictionnaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dictionnaryActionPerformed

    private void meanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_meanActionPerformed

    private void List_SuggestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_List_SuggestMouseClicked
        // TODO add your handling code here:
        KeyWord = List_Suggest.getModel().getElementAt(List_Suggest.getSelectionModel().getAnchorSelectionIndex());
        dictionnary.setText(KeyWord);
        DichActionPerformed(new java.awt.event.ActionEvent(Dich,0,""));
    }//GEN-LAST:event_List_SuggestMouseClicked

    private void dictionnaryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dictionnaryKeyReleased
        // TODO add your handling code here:
        KeyWord = dictionnary.getText();
        //Enter to translate
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        DichActionPerformed(new java.awt.event.ActionEvent(Dich,0,""));
        }
        
        //Suggest
        List_Suggest.clearSelection();
        DefaultListModel listModel = new DefaultListModel();
        for(int i = 0; i < data.list.size(); i++){
            if(data.list.get(i).startsWith(KeyWord) == true && i % 2 == 0){
              listModel.addElement(data.list.get(i));
            }
        }
        List_Suggest.setModel(listModel);
    }//GEN-LAST:event_dictionnaryKeyReleased

    private void xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaActionPerformed
        // TODO add your handling code here:
        String word = JOptionPane.showInputDialog(null, "Nhập từ cần xóa:", 
                "Xóa từ", JOptionPane.INFORMATION_MESSAGE);
        int count;
        count = data.list.indexOf(word);
        if(word.length()==0){}
        else if(count == -1) JOptionPane.showMessageDialog(this, "Không có từ này");
        else {
            data.list.remove(count);
            data.list.remove(count);
            JOptionPane.showMessageDialog(this, "Đã xóa thành công từ: " + word);
        }
    }//GEN-LAST:event_xoaActionPerformed

    private void voiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voiceActionPerformed
        // TODO add your handling code here:      
        try {
            System.setProperty("FreeTTSSynthEngineCentral", "com.sun.speech.freetts.jsapi.FreeTTSEngineCentral");
            System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
            Central.registerEngineCentral("com.sun.speech.freetts.jsapi.FreeTTSEngineCentral");
        } catch (Exception e) {
        }
        Voice voiced;
        VoiceManager vm = VoiceManager.getInstance();
        voiced = vm.getVoice("kevin16");
        voiced.allocate();
        voiced.speak(dictionnary.getText());
    }//GEN-LAST:event_voiceActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewJFrame frame = new NewJFrame();
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Dich;
    private javax.swing.JList<String> List_Suggest;
    private javax.swing.JButton add;
    private javax.swing.JTextField dictionnary;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField mean;
    private javax.swing.JTextField meanNew;
    private javax.swing.JTextField newWord;
    private javax.swing.JButton sua;
    private javax.swing.JButton voice;
    private javax.swing.JButton xoa;
    // End of variables declaration//GEN-END:variables
}
